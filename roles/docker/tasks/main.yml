- name: Create APT keyrings folder
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_facts['distribution'] | lower }}/gpg"
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"

- name: Get OS codename
  ansible.builtin.shell: ". /etc/os-release; echo $VERSION_CODENAME"
  register: docker_codename
  changed_when: false

- name: Get system architecture
  ansible.builtin.command: dpkg --print-architecture
  register: docker_arch
  changed_when: false

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: >
      deb [arch={{ docker_arch.stdout | trim }} signed-by=/etc/apt/keyrings/docker.asc]
      https://download.docker.com/linux/ubuntu
      {{ docker_codename.stdout | trim }}
      {{ docker_channel }}
    filename: docker
    state: present
    update_cache: true

- name: Update APT cache
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker Engine + plugins
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Setup /etc/docker/daemon.json
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: "{{ lookup('template', 'daemon.json.j2') }}"
    mode: "0644"
  notify: Restart Docker

- name: "Add user to docker group: {{ admin_user }}"
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: docker
    append: true

- name: Ensure Docker is started and enabled
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

# ---- Handlers ----
- name: Trigger handlers
  ansible.builtin.meta: flush_handlers
